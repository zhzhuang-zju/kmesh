name: Kmesh CI Workflow

on:
  pull_request:
  merge_group: # enable merge queue

permissions:
  contents: read

jobs:

  build:
    permissions:
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go-version: [ '1.22' ]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4.0.0
      with:
        go-version: ${{ matrix.go-version }}

    - name: Run gen-check
      run: |
        make gen-check

    - name: Build Kmesh
      shell: bash
      run: |
        sudo env "PATH=$PATH" bash ./build.sh

    - name: Setup Enviroments
      run: |
        echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/mk" >> $GITHUB_ENV
    
    # Since requiring code generated by the Proto compilation, execute go lint after building.  
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3.7.0
      with:
        args: "--config=common/config/.golangci.yaml --out-format colored-line-number"
        skip-pkg-cache: true

    - name: Go Test
      run: |
        sudo env LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:$GITHUB_WORKSPACE/api/v2-c:$GITHUB_WORKSPACE/bpf/deserialization_to_bpf_map PKG_CONFIG_PATH=$GITHUB_WORKSPACE/mk go test -race -v -vet=off -coverprofile=coverage.out ./pkg/...

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.out
        flags: unittests
        fail_ci_if_error: false